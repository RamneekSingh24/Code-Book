// call BIT(n+1) where n is size of the BIT
// one based indexing BIT
struct BIT {
    vector<ll> bit;  // binary indexed tree
    int n;

    BIT(int n) {
        this->n = n + 1;
        bit.assign(n + 1, 0);
    }

    ll sum(int idx) {
        ll ret = 0;
        for (++idx; idx > 0; idx -= idx & -idx) {
            ret += bit[idx];
        }
        return ret;
    }
    ll sum(int l, int r) {
        return sum(r) - sum(l - 1);
    }
    void add(int idx, ll delta) {
        for (++idx; idx < n; idx += idx & -idx) {
            bit[idx] += delta;
        }
    }
};